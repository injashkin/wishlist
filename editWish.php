<?php
/**
 * Страница editWish.php
 * Данная страница открывается после того, как на странице editWishList.php
 * пользователь нажимает кнопку "Добавить пожелание", либо кнопку "Изменить" 
 * справа от пожелания.
 * На данной странице отображается форма HTML, в которой пользователь вводит 
 * описание пожелания и, возможно, дату, до наступления которой пожелание 
 * должно быть выполнено, а затем нажимает кнопку "Сохранить изменения".
 * Если форма отправляется без описания пожелания, то выполняется возврат 
 * к этой же форме для повторной попытки ввода. Если пользователь указал 
 * срок выполнения пожелания, но не ввел описание, то при перезагрузке 
 * формы эти данные вновь отображаются. После подтверждения пользователем 
 * нового пожелания приложение добавляет пожелание к базе данных "Wishes".
 * 
 * Если пользователь нажал на кнопку "Изменить", то откроется страница 
 * editWish.php с данными выбранного пожелания. Пользователь изменяет 
 * описание и/или срок выполнения пожелания, а затем нажимает кнопку 
 * "Сохранить изменения". Если описание не заполнено, то выводится 
 * сообщение об ошибке, после чего выполняется возврат к странице 
 * editWish.php. Если описание заполнено, то выполняется возврат к 
 * странице editWishList.php, на которой можно обновить данные пожелания.
 */
/**
 * Проверка входа пользователя 
 * Для извлечения данных открывается массив "$_SESSION". 
 * Выполняется проверка того, что массив "$_SESSION" содержит элемент с 
 * идентификатором "user". 
 * При неудачном завершении проверки (что означает, что пользователь не 
 * зарегистрирован) выполняется перенаправление на первую страницу 
 * "index.php" и обработка кода PHP прерывается.
 */
session_start();
if (!array_key_exists("user", $_SESSION)) {
    header('Location: index.php');
    exit;
}

/**
 * Код выполняет следующие функции: 
 * активация использования файла db.php; 
 * получение или создание экземпляра класса WishDB; 
 * извлечение идентификатора пользователя, осуществляющего попытку 
 * добавления пожелания путем вызова функции get_wisher_id_by_name; 
 * инициализация флага $wishDescriptionIsEmpty, который будет использован 
 * позже для отображения сообщений об ошибках; 
 * проверка того, что используется метод запроса "POST" (соответствует 
 * передаче данных из формы для ввода данных пожелания непосредственно 
 * на странице editWish.php); 
 * проверка того, содержит ли массив $_POST элемент с ключом "back". 
 * 
 * Если массив $_POST содержит элемент с ключом "back", то перед 
 * передачей формы была нажата кнопка "Вернуться к списку". В этом 
 * случае осуществляется перенаправление на страницу editWishList.php 
 * без сохранения данных, введенных в полях, и прекращается обработка 
 * блока PHP. 
 * Если массив $_POST не содержит элемент с ключом "back", то данные 
 * были переданы путем нажатия кнопки "Сохранить изменения". В этом случае 
 * в соответствии с кодом выполняется проверка наличия описания пожелания. 
 * Это реализуется путем проверки того, является ли элемент с ключом 
 * "wish" в массиве "$_POST" пустым. Если ключ пуст, значение флага 
 * $wishDescriptionIsEmpty изменяется на "true". Следует отметить, что 
 * если выполнение дальнейшего кода в блоке PHP прерывается, форма 
 * "editWish" перезагружается. 
 * Если не была нажата кнопка "Вернуться к списку", но при этом указано 
 * описание пожелания, то код вызывает функцию insert_wish с 
 * идентификатором пользователя, описанием и сроком выполнения пожелания 
 * в качестве входных параметров. Затем код перенаправляет пользователя 
 * на страницу editWishList.php и прекращает обработку PHP.
 */
require_once("Includes/db.php");
$wisherID = WishDB::getInstance()->get_wisher_id_by_name($_SESSION['user']);

$wishDescriptionIsEmpty = false;
if ($_SERVER['REQUEST_METHOD'] == "POST") {
    if (array_key_exists("back", $_POST)) {
        header('Location: editWishList.php');
        exit;
    } else if ($_POST['wish'] == "") {
        $wishDescriptionIsEmpty = true;
    }/**
     * Код выполняет проверку того, что элемент wishID в массиве $_POST 
     * не является пустой строкой (что означает перенаправление со 
     * страницы editWishList.php путем нажатия кнопки "Edit"), а также 
     * что пользователь указал описание пожелания. Если проверка 
     * выполнена успешно, код вызывает функцию update_wish с входными 
     * параметрами wishID, description и dueDate.Эти параметры получены 
     * от формы ввода HTML с помощью метода POST. После вызова 
     * update_wish осуществляется переход на страницу editWishList.php, 
     * и обработка блока PHP прерывается. 
     */ else if ($_POST["wishID"] == "") {
        WishDB::getInstance()->insert_wish($wisherID, $_POST['wish'], $_POST['dueDate']);
        header('Location: editWishList.php');
        exit;
    } else if ($_POST["wishID"] != "") {
        WishDB::getInstance()->update_wish($_POST["wishID"], $_POST["wish"], $_POST["dueDate"]);
        header('Location: editWishList.php');
        exit;
    }
}


/*
 * Повторное отображение срока выполнения после неудавшейся отправки 
 * Если пользователь не указал описание в форме "editWish", то появится 
 * сообщение об ошибке, и будет выполнен возврат к данной странице 
 * (editWish.php). В случае возврата 
 * пользователя к странице editWish.php в форме "editWish" должно 
 * отображаться значение dueDate (если оно было до этого введено). Для 
 * того чтобы введенные значения остались в полях, необходимо сохранить 
 * данные нового пожелания в массиве. Массив состоить из двух 
 * элементов с именами description и due_date. 
 * 
 * Определяется тот метод "Request Server", который использовался для 
 * передачи данных, а также создается массив с именем $wish. Если 
 * использовался метод "POST" (что означает, что входная форма 
 * отображается после неудачной попытки сохранить пожелание с пустым 
 * описанием), то элементы description и due_date принимают значения, 
 * переданные с использованием метода "POST". 
 * Если использовался другой метод (что означает, что входная форма 
 * отображается впервые после переадресации со страницы editWishList.php), 
 * то элементы description и due_date являются пустыми.
 * 
 * После нажатия кнопки "Редактировать" на странице editWishList.php 
 * идентификатор выбранного пожелания передается на страницу editWish.php 
 * с использованием метода запроса к серверу "GET". Для сохранения 
 * идентификатора пожелания к массиву добавлен элемент $wish. 
 * Так же, как и при добавлении нового пожелания, в случае неудачной 
 * попытки сохранения можно перейти в форму ввода может как со страницы 
 * editWishList.php, так и со страницы editWish.php. Отличие между 
 * вариантами заключается в методе запроса к серверу, посредством 
 * которого осуществляется передача данных. Метод "GET" указывает, что 
 * форма отображается при первом переходе пользователя на эту страницу 
 * при нажатии на кнопку "Edit Wish". Метод POST указывает на то, что 
 * пользователь был перенаправлен в форму после попытки сохранения 
 * пожелания без описания. 
 * 
 * Код инициализирует массив $wish с тремя элементами – id, description и 
 * due_date. Значения этих элементов зависят от метода запроса к серверу. 
 * Если используется метод запроса к серверу "POST", то значения 
 * извлекаются из формы ввода. В противном случае, если используется 
 * метод запроса к серверу "GET", и при этом массив "$_GET" содержит 
 * элемент с ключом "wishID", значения извлекаются из базы данных 
 * функцией "get_wish_by_wish_id". Наконец, если не используется ни один 
 * из методов запроса ("POST" или "GET"), то это означает вариант 
 * добавления нового пожелания, т.е. что элементы пусты.  * 
 */

if ($_SERVER["REQUEST_METHOD"] == "POST")
    $wish = array("id" => $_POST["wishID"], "description" =>
        $_POST["wish"], "due_date" => $_POST["dueDate"]);
else if (array_key_exists("wishID", $_GET))
    $wish = mysqli_fetch_array(WishDB::getInstance()->get_wish_by_wish_id($_GET["wishID"]));
else
    $wish = array("id" => "", "description" => "", "due_date" => "");
?>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    </head>
    <body>
        <!--
        Форма "editWish" содержит следующие элементы:
        Два пустых текстовых поля для ввода пожелания и срока выполнения.
        Текст, который будет напечатан рядом с полями ввода.
        Поле submit, представляющее кнопку "Сохранить изменения"
        Поле submit, представляющее кнопку "Вернуться к списку" для возврата
        к странице editWishList.php
        После нажатия кнопки "Сохранить изменения" форма отправляет 
        введенные данные на ту же страницу editWish.php с использованием 
        метода "Request" "POST". 
        
        Скрытое поле предназначено для передачи идентификатора пожелания 
        когда требуется редактировать существующее пожелание. Значение 
        этого скрытого поля извлекается из массива $wish. На этапе 
        создания нового пожелания значению соответствует пустая строка. 
        При редактировании пожелания значение скрытого поля изменится на 
        идентификатор пожелания.
        -->
        <form name="editWish" action="editWish.php" method="POST">
            <input type="hidden" name="wishID" value="<?php echo $wish["id"]; ?>" />
            Опишите ваше пожелание: <input type="text" name="wish"  value="<?php echo $wish['description']; ?>" /><br/>
            <?php
            /**
             * Отображение сообщений об ошибках 
             * При попытке пользователя сохранить пожелание без описания 
             * отображается сообщение об ошибке. Сообщение об ошибке 
             * отображается в случае значения "true" для флага 
             * $wishDescriptionIsEmpty. Флаг обрабатывается в течение 
             * проверки допустимости формы ввода. 
             */
            if ($wishDescriptionIsEmpty)
                echo "Пожалуйста, введите описание<br/>";
            ?>
            Когда Вы хотите его получить? <input type="text" name="dueDate" value="<?php echo $wish['due_date']; ?>"/><br/>
            <input type="submit" name="saveWish" value="Сохранить изменения"/>
            <input type="submit" name="back" value="Вернуться к списку"/>
        </form>
    </body>
</html> 